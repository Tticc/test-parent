package com.tester.testerswing.swing;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.tester.testerswing.boot.AccountInfo;
import com.tester.testerswing.boot.Boot;
import com.tester.testerswing.swing.eventHandler.EventHandle_Main;
import com.tester.testerswing.swing.eventHandler.EventHandle_Sai;
import com.tester.testerswing.swing.eventHandler.EventHandle_Silot;
import lombok.Data;

import javax.swing.*;
import java.awt.*;
import java.util.List;

/**
 * @Author 温昌营
 * @Date 2022-8-4 11:10:22
 */
@Data
public class EasyScript_UI_Main {

    private JPanel main;
    private JButton checking;
    private JButton refresh;
    private JTextField point_input;
    private JLabel refresh_time;
    private JButton silot_pause;
    private JButton sai_pause;
    private JButton silot_start;
    private JButton sai_start;
    private JLabel sai_status;
    private JLabel silot_status;
    private JLabel point_input_info;
    private JLabel point_print;
    private JLabel check_status;
    private JButton open_silot;
    private JButton open_return_silot;
    private JButton open_sai;
    private JButton open_return_sai;
    private JButton open_run_silot;
    private JButton open_run_sai;
    private JButton onTopReplica_start;
    private JLabel red_input_info;
    private JTextField red_input;
    private JLabel red_point_print;


    Boot boot = new Boot();
    List<AccountInfo> accountInfoList = boot.getAccountInfoList();

    public EasyScript_UI_Main start(Silot_Input silot_input, Sai_Input sai_input) {
        afterInit(silot_input, sai_input);
        return this;
    }

    public void afterInit(Silot_Input silot_input, Sai_Input sai_input) {
        // 初始化公共监控事件
        InitCommonEventHelper.initCommonEvent(this);

        // 初始化 silot 录入事件
        EventHandle_Silot.handle_silot(silot_input);

        // 初始化 sai 录入事件
        EventHandle_Sai.handle_sai(sai_input);

        // 处理公共界面的其他事件。如open，return，run
        EventHandle_Main.handle_main(this);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        main = new JPanel();
        main.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:90px:noGrow,left:4dlu:noGrow,fill:90px:noGrow,left:20dlu:noGrow,fill:max(d;0px):noGrow,left:0dlu:noGrow,fill:90px:noGrow,left:4dlu:noGrow,fill:90px:noGrow", "center:max(d;0px):noGrow,top:4dlu:noGrow,center:25px:noGrow,top:0dlu:noGrow,center:max(d;0px):noGrow,top:4dlu:noGrow,center:25px:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:0dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:5dlu:noGrow,center:max(d;4px):noGrow,top:15dlu:noGrow,center:max(d;4px):noGrow,top:6dlu:noGrow,center:max(d;4px):noGrow"));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CellConstraints cc = new CellConstraints();
        main.add(panel1, cc.xy(3, 3));
        checking = new JButton();
        checking.setText("检测");
        checking.setVerticalAlignment(0);
        panel1.add(checking, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        refresh_time = new JLabel();
        refresh_time.setText(" ");
        main.add(refresh_time, cc.xyw(4, 7, 3));
        point_input = new JTextField();
        point_input.setText("");
        main.add(point_input, cc.xy(5, 11, CellConstraints.FILL, CellConstraints.DEFAULT));
        silot_pause = new JButton();
        silot_pause.setText("silot停止");
        main.add(silot_pause, cc.xy(3, 13));
        silot_start = new JButton();
        silot_start.setText("silot开始");
        silot_start.setVerticalAlignment(0);
        main.add(silot_start, cc.xy(3, 15));
        silot_status = new JLabel();
        silot_status.setText("true");
        main.add(silot_status, new CellConstraints(3, 17, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 25, 0, 0)));
        point_input_info = new JLabel();
        point_input_info.setText("人数点阵");
        main.add(point_input_info, new CellConstraints(3, 11, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 15, 0, 0)));
        point_print = new JLabel();
        point_print.setEnabled(true);
        point_print.setText(" ");
        main.add(point_print, cc.xyw(3, 9, 3));
        refresh = new JButton();
        refresh.setText("刷新");
        main.add(refresh, cc.xy(3, 7));
        check_status = new JLabel();
        check_status.setText(" ");
        main.add(check_status, cc.xy(5, 3));
        sai_pause = new JButton();
        sai_pause.setText("sai停止");
        main.add(sai_pause, cc.xy(9, 13));
        sai_start = new JButton();
        sai_start.setText("sai开始");
        main.add(sai_start, cc.xy(9, 15));
        sai_status = new JLabel();
        sai_status.setText("true");
        main.add(sai_status, new CellConstraints(9, 17, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 25, 0, 0)));
        open_silot = new JButton();
        open_silot.setText("打开");
        main.add(open_silot, cc.xy(3, 19));
        open_return_silot = new JButton();
        open_return_silot.setText("回收");
        main.add(open_return_silot, cc.xy(5, 19));
        open_sai = new JButton();
        open_sai.setText("打开");
        main.add(open_sai, cc.xy(9, 19));
        open_return_sai = new JButton();
        open_return_sai.setText("回收");
        main.add(open_return_sai, cc.xy(11, 19));
        open_run_silot = new JButton();
        open_run_silot.setText("跑路");
        main.add(open_run_silot, cc.xy(5, 21));
        open_run_sai = new JButton();
        open_run_sai.setText("跑路");
        main.add(open_run_sai, cc.xy(11, 21));
        onTopReplica_start = new JButton();
        onTopReplica_start.setText("投屏");
        main.add(onTopReplica_start, cc.xy(9, 3));
        red_input_info = new JLabel();
        red_input_info.setText("Red");
        main.add(red_input_info, cc.xy(6, 11, CellConstraints.RIGHT, CellConstraints.DEFAULT));
        red_input = new JTextField();
        main.add(red_input, cc.xy(9, 11, CellConstraints.FILL, CellConstraints.DEFAULT));
        red_point_print = new JLabel();
        red_point_print.setEnabled(true);
        red_point_print.setText(" ");
        main.add(red_point_print, cc.xyw(9, 9, 2));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }
}
