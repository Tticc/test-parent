<configuration>
    <springProperty scope="context" name="logLevel" source="logback.level" defaultValue="INFO"/>
    <!-- 读取spring.application.name中的属性来生成日志文件名 -->
    <springProperty scope="context" name="logName" source="spring.application.name" defaultValue="cv"/>
    <springProperty scope="context" name="onlyOutFile" source="my.log.config.onlyOutFile" defaultValue="false"/>
    <contextName>${logName}</contextName>

    <!-- 控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                <!--logger{36}包名缩略，logger{96}包名全路径-->
                %date %level [%thread] [%logger{36}:%line] - %X{X-B3-TraceId} %X{X-B3-SpanId} - %msg%n
            </pattern>
            <!--<pattern>
                %date %level [%logger{96}:%line] - %X{X-B3-TraceId} %X{X-B3-SpanId} - %msg%n
            </pattern>-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- INFO 文件 -->
    <appender name="LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--<appender name="LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <File>logs/${logName}.log</File>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>
                %date %level [%thread] [%logger{96}:%line] - %X{X-B3-TraceId} %X{X-B3-SpanId} - %msg%n
            </pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/${logName}.%d{yyyyMMdd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>256MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!--普通日志文件不记录error-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>
    </appender>

    <!-- ERROR 文件 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <File>logs/${logName}.error.log</File>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>
                %date %level [%thread] [%logger{96}:%line] - %X{X-B3-TraceId} %X{X-B3-SpanId} - %msg%n
            </pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/${logName}.%d{yyyyMMdd}.error.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>



    <!-- 本地环境配置 -->
    <springProfile name="local,dev,sit">
        <root level="${logLevel}">
            <!-- 只打印到控制台，不记录到文件中 -->
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="LOG_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    <!-- 非本地环境配置 -->
    <springProfile name="!local">
        <root level="${logLevel}">
            <!--<appender-ref ref="STDOUT"/>-->
            <!-- 开启info日志和error日志，error日志会打印到本地 -->
            <appender-ref ref="LOG_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
</configuration>