<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tester.testerwebapp.dao.mapper.UserMapper">
    <resultMap id="baseResultMap" type="com.tester.testerwebapp.dao.domain.UserDomain">
        <result property="id" column="id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="extPersonId" column="ext_person_id"/>
        <result property="name" column="name"/>
        <result property="cellphone" column="cellphone"/>
        <result property="gender" column="gender"/>
        <result property="email" column="email"/>
        <result property="enname" column="enname"/>
        <result property="status" column="status"/>
        <result property="wechatid" column="wechatid"/>
        <result property="note" column="note"/>
        <result property="dataFrom" column="data_from"/>

        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="revision" column="revision"/>
        <result property="deleted" column="deleted"/>
    </resultMap>

    <sql id="table_name">
        u_person
    </sql>

    <sql id="baseSelectSql">
		employee_id
        ,ext_person_id
        ,name
        ,cellphone
        ,gender
        ,email
        ,enname
        ,status
        ,wechatid
        ,note
        ,data_from
        ,create_time
        ,update_time
        ,revision
        ,deleted
	</sql>
    <sql id="selectSql">
        id,
        <include refid="baseSelectSql"></include>
    </sql>


    <select id="selectUserId" resultMap="baseResultMap">
        select <include refid="selectSql"></include>
        from <include refid="table_name"></include> as t_alias
        where id = #{id}
        and deleted = 0
    </select>

    <select id="listByName" resultMap="baseResultMap" parameterType="com.tester.testercommon.model.request.IdAndNameModel">
        select <include refid="selectSql"></include>
        from <include refid="table_name"></include>  as t_alias
        <where>
            <if test="name != null and name != ''">
                and t_alias.name like CONCAT('%', #{name}, '%')
            </if>
            <if test="email != null and email != ''">
                and t_alias.email like CONCAT('%', #{email}, '%')
            </if>
            <if test="id != null">
                and t_alias.id = #{email}
            </if>
        </where>
        and deleted = 0
    </select>

    <!--todo 未完成-->
    <update id="batchUpdate" parameterType="com.tester.testerwebapp.dao.domain.UserDomain">
        <foreach collection="list" item="item" index="index" separator=";">
            update
            <include refid="table_name"/>
            <set>
                <if test="item.invoiceInfoId != null">invoice_info_id = #{item.invoiceInfoId,jdbcType=BIGINT},</if>
                <if test="item.orderNo != null">order_no = #{item.orderNo,jdbcType=BIGINT},</if>
                <if test="item.memberId != null">member_id = #{item.memberId,jdbcType=BIGINT},</if>
                <if test="item.sellerTaxNo != null">seller_tax_no = #{item.sellerTaxNo,jdbcType=VARCHAR},</if>
                <if test="item.invoiceCode != null">invoice_code = #{item.invoiceCode,jdbcType=VARCHAR},</if>
                <if test="item.invoiceNo != null">invoice_no = #{item.invoiceNo,jdbcType=VARCHAR},</if>
                <if test="item.invoiceDate != null">invoice_date = #{item.invoiceDate,jdbcType=TIMESTAMP},</if>
                <if test="item.taxControlCode != null">tax_control_code = #{item.taxControlCode,jdbcType=VARCHAR},</if>
                <if test="item.invoiceQrCode != null">invoice_qr_code = #{item.invoiceQrCode,jdbcType=VARCHAR},</if>
                <if test="item.invoiceUrl != null">invoice_url = #{item.invoiceUrl,jdbcType=VARCHAR},</if>
                <if test="item.invoiceMainInfo != null">invoice_main_info = #{item.invoiceMainInfo,jdbcType=VARCHAR},
                </if>
                version = version + 1,
            </set>
            where
            id = #{item.id, jdbcType=BIGINT} and deleted = 0
            and version = #{item.version, jdbcType=INTEGER}
        </foreach>
    </update>
</mapper>